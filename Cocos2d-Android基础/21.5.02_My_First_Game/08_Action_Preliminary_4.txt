01. CCFadeIn 与 CCFadeOut    1.01  Introduction           淡入淡出动画。    1.02  Source Code - CCFadeOut          public class GameLayer extends CCLayer {	          (1)  CCSprite player;              public GameLayer () {          (1)     player = CCSprite.sprite("Lufei.png");          (2)     player.setPosition(100, 100);          (3)     this.addChild(player);                  // FadeIn 动画，作用是使精灵淡出          (4)     CCFadeOut fadeOut = CCFadeOut.action(3);          (5)     player.runAction(fadeOut);              }          }    1.03  Source Code - CCFadeIn          public class GameLayer extends CCLayer {	              CCSprite player;              public GameLayer () {                  player = CCSprite.sprite("Lufei.png");                  player.setPosition(100, 100);                  this.addChild(player);                  // FadeIn 动画，作用是使精灵淡入          (1)     CCFadeIn fadeIn = CCFadeIn.action(3);          (2)     player.runAction(fadeIn);                  /*                  CCFadeOut fadeOut = CCFadeOut.action(3);                  player.runAction(fadeOut);                  */              }          }02. CCTintTo 与 CCTintBy    2.01  Introduction          颜色变化的动画。    2.02  Source Code - CCTintTo          public class GameLayer extends CCLayer {	              CCSprite player;              public GameLayer () {                  player = CCSprite.sprite("Lufei.png");                  player.setPosition(100, 100);                  this.addChild(player);          (2)     ccColor3B color3B = ccColor3B.ccc3(255, 0, 0);                  // 该动画可以使精灵的颜色变化到指定值          (1)     CCTintTo tintTo = CCTintTo.action(3, color3B);          (3)     player.runAction(tintTo);                  /*                  // FadeIn 动画，作用是使精灵淡入                  CCFadeIn fadeIn = CCFadeIn.action(3);                  player.runAction(fadeIn);                  CCFadeOut fadeOut = CCFadeOut.action(3);                  player.runAction(fadeOut);                  */              }          }    2.03  Source Code - CCTintBy          上面的是精灵的颜色变到指定的颜色，而现在是精灵的颜色加到指定的颜色；          public class GameLayer extends CCLayer {	              CCSprite player;              public GameLayer () {                  player = CCSprite.sprite("Lufei.png");                  player.setPosition(100, 100);                  this.addChild(player);                  // 在当前精灵的基础上，加一个值          (1)     CCTintBy actionTintBy = CCTintBy.action(2, ccColor3B.ccc3(-127, -255, -127));          (2)     player.runAction(actionTintBy);                  /*                  // 该动画可以使精灵的颜色变化到指定值                  ccColor3B color3B = ccColor3B.ccc3(255, 0, 0);                  CCTintTo tintTo = CCTintTo.action(3, color3B);                  player.runAction(tintTo);                  // FadeIn 动画，作用是使精灵淡入                  CCFadeIn fadeIn = CCFadeIn.action(3);                  player.runAction(fadeIn);                  CCFadeOut fadeOut = CCFadeOut.action(3);                  player.runAction(fadeOut);                  */              }          }03. CCRepeat    3.01  Introduction          重复动画。    3.02  Source Code - Step One          public class GameLayer extends CCLayer {	              CCSprite player;              public GameLayer () {                  player = CCSprite.sprite("Lufei.png");                  player.setPosition(100, 100);                  this.addChild(player);          (1)     CGPoint targetPoint = CGPoint.ccp(400, 300);          (2)     CCMoveTo moveTo = CCMoveTo.action(2, targetPoint);          (3)     CCRepeat repeat = CCRepeat.action(moveTo, 3);          (4)     player.runAction(repeat);                  /*                  ccColor3B color3B = ccColor3B.ccc3(255, 0, 0);                  // 在当前精灵的基础上，加一个值                  CCTintBy tintBy = CCTintBy.action(3, color3B);                  player.runAction(tintBy);                  // 该动画可以使精灵的颜色变化到指定值                  CCTintTo tintTo = CCTintTo.action(3, color3B);                  player.runAction(tintTo);                  // FadeIn 动画，作用是使精灵淡入                  CCFadeIn fadeIn = CCFadeIn.action(3);                  player.runAction(fadeIn);                  CCFadeOut fadeOut = CCFadeOut.action(3);                  player.runAction(fadeOut);                  */              }          }          现在这个动画移动到一个地方后，它就不动了，要想让它一直致力就得再定义一个对象；    3.03  Source Code - Step Two          public class GameLayer extends CCLayer {	              CCSprite player;              public GameLayer () {                  player = CCSprite.sprite("Lufei.png");          (1)     CGPoint initPoint = CGPoint.ccp(100, 300);                  player.setPosition(100, 100);                  this.addChild(player);                  CGPoint targetPoint = CGPoint.ccp(400, 300);          (2)     CCMoveTo moveTo1 = CCMoveTo.action(2, targetPoint);          (3)     CCMoveTo moveTo2 = CCMoveTo.action(2, initPoint);          (4)     CCSequence seq = CCSequence.actions(moveTo1, moveTo2);          (5)     CCRepeat repeat = CCRepeat.action(seq, 3);          (6)     player.runAction(repeat);                  /*                  ccColor3B color3B = ccColor3B.ccc3(255, 0, 0);                  // 在当前精灵的基础上，加一个值                  CCTintBy tintBy = CCTintBy.action(3, color3B);                  player.runAction(tintBy);                  // 该动画可以使精灵的颜色变化到指定值                  CCTintTo tintTo = CCTintTo.action(3, color3B);                  player.runAction(tintTo);                  // FadeIn 动画，作用是使精灵淡入                  CCFadeIn fadeIn = CCFadeIn.action(3);                  player.runAction(fadeIn);                  CCFadeOut fadeOut = CCFadeOut.action(3);                  player.runAction(fadeOut);                  */              }          }04. CCRepeatForever    4.01  Introduction          让一个动画无限制的循环下去。    4.02  Source Code          public class GameLayer extends CCLayer {	              CCSprite player;              public GameLayer () {                  player = CCSprite.sprite("Lufei.png");                  CGPoint initPoint = CGPoint.ccp(100, 300);                  player.setPosition(100, 100);                  this.addChild(player);                  CGPoint targetPoint = CGPoint.ccp(400, 300);                  CCMoveTo moveTo1 = CCMoveTo.action(2, targetPoint);                  CCMoveTo moveTo2 = CCMoveTo.action(2, initPoint);                  CCSequence seq = CCSequence.actions(moveTo1, moveTo2);          (1)     CCRepeatForever forever = CCRepeatForever.action(seq);          (2)     player.runAction(forever);                  /*                  CCRepeat repeat = CCRepeat.action(seq, 3);                  player.runAction(repeat);                  ccColor3B color3B = ccColor3B.ccc3(255, 0, 0);                  // 在当前精灵的基础上，加一个值                  CCTintBy tintBy = CCTintBy.action(3, color3B);                  player.runAction(tintBy);                  // 该动画可以使精灵的颜色变化到指定值                  CCTintTo tintTo = CCTintTo.action(3, color3B);                  player.runAction(tintTo);                  // FadeIn 动画，作用是使精灵淡入                  CCFadeIn fadeIn = CCFadeIn.action(3);                  player.runAction(fadeIn);                  CCFadeOut fadeOut = CCFadeOut.action(3);                  player.runAction(fadeOut);                  */              }          }05. 总结